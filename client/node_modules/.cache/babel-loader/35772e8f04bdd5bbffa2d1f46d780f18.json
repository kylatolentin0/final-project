{"ast":null,"code":"import _regeneratorRuntime from\"/Users/kylatolentino/final-project-1/final-project/client/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"/Users/kylatolentino/final-project-1/final-project/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"/Users/kylatolentino/final-project-1/final-project/client/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState,useEffect}from'react';import Card from'../components/Card';import{supabase}from'../client';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var ReadPosts=function ReadPosts(props){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),posts=_useState2[0],setPosts=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),searchQuery=_useState4[0],setSearchQuery=_useState4[1];useEffect(function(){var fetchPosts=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(){var _yield$supabase$from$,data;return _regeneratorRuntime().wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return supabase.from('Posts').select();case 2:_yield$supabase$from$=_context.sent;data=_yield$supabase$from$.data;setPosts(data);case 5:case\"end\":return _context.stop();}}},_callee);}));return function fetchPosts(){return _ref.apply(this,arguments);};}();fetchPosts();// Call fetchPosts when component mounts\n// Clean-up function\nreturn function(){// Any clean-up code if needed\n};},[]);var handleSearchChange=function handleSearchChange(event){setSearchQuery(event.target.value);};var handleDeletePost=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(id){return _regeneratorRuntime().wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return supabase.from('Posts').delete().eq('id',id);case 2:setPosts(posts.filter(function(post){return post.id!==id;}));case 3:case\"end\":return _context2.stop();}}},_callee2);}));return function handleDeletePost(_x){return _ref2.apply(this,arguments);};}();var handleUpdatePost=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee3(id,updatedPostData){return _regeneratorRuntime().wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:case\"end\":return _context3.stop();}}},_callee3);}));return function handleUpdatePost(_x2,_x3){return _ref3.apply(this,arguments);};}();var filteredPosts=posts.filter(function(post){return post.title.toLowerCase().includes(searchQuery.toLowerCase())||post.author.toLowerCase().includes(searchQuery.toLowerCase())||post.description.toLowerCase().includes(searchQuery.toLowerCase());});return/*#__PURE__*/_jsxs(\"div\",{className:\"ReadPosts\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Search posts...\",value:searchQuery,onChange:handleSearchChange}),/*#__PURE__*/_jsx(\"br\",{}),\" \",filteredPosts&&filteredPosts.length>0?filteredPosts.map(function(post,index){return/*#__PURE__*/_jsx(Card,{id:post.id,title:post.title,author:post.author,description:post.description,onDelete:handleDeletePost,onUpdate:handleUpdatePost},post.id);}):/*#__PURE__*/_jsx(\"h2\",{children:'No Artists Yet :('})]});};export default ReadPosts;","map":{"version":3,"names":["React","useState","useEffect","Card","supabase","ReadPosts","props","posts","setPosts","searchQuery","setSearchQuery","fetchPosts","from","select","data","handleSearchChange","event","target","value","handleDeletePost","id","delete","eq","filter","post","handleUpdatePost","updatedPostData","filteredPosts","title","toLowerCase","includes","author","description","length","map","index"],"sources":["/Users/kylatolentino/final-project-1/final-project/client/src/pages/ReadPosts.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Card from '../components/Card';\nimport { supabase } from '../client';\n\nconst ReadPosts = (props) => {\n    const [posts, setPosts] = useState([]);\n    const [searchQuery, setSearchQuery] = useState('');\n\n    useEffect(() => {\n        const fetchPosts = async () => {\n            const { data } = await supabase\n                .from('Posts')\n                .select();\n\n            setPosts(data);\n        };\n\n        fetchPosts(); // Call fetchPosts when component mounts\n\n        // Clean-up function\n        return () => {\n            // Any clean-up code if needed\n        };\n    }, []);\n\n    const handleSearchChange = (event) => {\n        setSearchQuery(event.target.value);\n    };\n\n    const handleDeletePost = async (id) => {\n        await supabase\n            .from('Posts')\n            .delete()\n            .eq('id', id);\n\n        setPosts(posts.filter(post => post.id !== id));\n    };\n\n    const handleUpdatePost = async (id, updatedPostData) => {\n        // Implement update functionality here\n    };\n\n    const filteredPosts = posts.filter(post =>\n        post.title.toLowerCase().includes(searchQuery.toLowerCase()) ||\n        post.author.toLowerCase().includes(searchQuery.toLowerCase()) ||\n        post.description.toLowerCase().includes(searchQuery.toLowerCase())\n    );\n\n    return (\n        <div className=\"ReadPosts\">\n            <input\n                type=\"text\"\n                placeholder=\"Search posts...\"\n                value={searchQuery}\n                onChange={handleSearchChange}\n            />\n            <br /> {/* New line */}\n            {\n                filteredPosts && filteredPosts.length > 0 ?\n                    filteredPosts.map((post, index) =>\n                        <Card\n                            key={post.id}\n                            id={post.id}\n                            title={post.title}\n                            author={post.author}\n                            description={post.description}\n                            onDelete={handleDeletePost}\n                            onUpdate={handleUpdatePost}\n                        />\n                    ) : <h2>{'No Artists Yet :('}</h2>\n            }\n        </div>\n    )\n}\n\nexport default ReadPosts;"],"mappings":"6bAAA,MAAOA,MAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA2C,OAA3C,CACA,MAAOC,KAAP,KAAiB,oBAAjB,CACA,OAASC,QAAT,KAAyB,WAAzB,C,wFAEA,GAAMC,UAAS,CAAG,QAAZA,UAAY,CAACC,KAAD,CAAW,CACzB,cAA0BL,QAAQ,CAAC,EAAD,CAAlC,wCAAOM,KAAP,eAAcC,QAAd,eACA,eAAsCP,QAAQ,CAAC,EAAD,CAA9C,yCAAOQ,WAAP,eAAoBC,cAApB,eAEAR,SAAS,CAAC,UAAM,CACZ,GAAMS,WAAU,4FAAG,0LACQP,SAAQ,CAC1BQ,IADkB,CACb,OADa,EAElBC,MAFkB,EADR,4CACPC,IADO,uBACPA,IADO,CAKfN,QAAQ,CAACM,IAAD,CAAR,CALe,sDAAH,kBAAVH,WAAU,0CAAhB,CAQAA,UAAU,GAAI;AAEd;AACA,MAAO,WAAM,CACT;AACH,CAFD,CAGH,CAfQ,CAeN,EAfM,CAAT,CAiBA,GAAMI,mBAAkB,CAAG,QAArBA,mBAAqB,CAACC,KAAD,CAAW,CAClCN,cAAc,CAACM,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAd,CACH,CAFD,CAIA,GAAMC,iBAAgB,6FAAG,kBAAOC,EAAP,+IACfhB,SAAQ,CACTQ,IADC,CACI,OADJ,EAEDS,MAFC,GAGDC,EAHC,CAGE,IAHF,CAGQF,EAHR,CADe,QAMrBZ,QAAQ,CAACD,KAAK,CAACgB,MAAN,CAAa,SAAAC,IAAI,QAAIA,KAAI,CAACJ,EAAL,GAAYA,EAAhB,EAAjB,CAAD,CAAR,CANqB,wDAAH,kBAAhBD,iBAAgB,6CAAtB,CASA,GAAMM,iBAAgB,6FAAG,kBAAOL,EAAP,CAAWM,eAAX,yKAAH,kBAAhBD,iBAAgB,kDAAtB,CAIA,GAAME,cAAa,CAAGpB,KAAK,CAACgB,MAAN,CAAa,SAAAC,IAAI,QACnCA,KAAI,CAACI,KAAL,CAAWC,WAAX,GAAyBC,QAAzB,CAAkCrB,WAAW,CAACoB,WAAZ,EAAlC,GACAL,IAAI,CAACO,MAAL,CAAYF,WAAZ,GAA0BC,QAA1B,CAAmCrB,WAAW,CAACoB,WAAZ,EAAnC,CADA,EAEAL,IAAI,CAACQ,WAAL,CAAiBH,WAAjB,GAA+BC,QAA/B,CAAwCrB,WAAW,CAACoB,WAAZ,EAAxC,CAHmC,EAAjB,CAAtB,CAMA,mBACI,aAAK,SAAS,CAAC,WAAf,wBACI,cACI,IAAI,CAAC,MADT,CAEI,WAAW,CAAC,iBAFhB,CAGI,KAAK,CAAEpB,WAHX,CAII,QAAQ,CAAEM,kBAJd,EADJ,cAOI,aAPJ,KASQY,aAAa,EAAIA,aAAa,CAACM,MAAd,CAAuB,CAAxC,CACIN,aAAa,CAACO,GAAd,CAAkB,SAACV,IAAD,CAAOW,KAAP,qBACd,KAAC,IAAD,EAEI,EAAE,CAAEX,IAAI,CAACJ,EAFb,CAGI,KAAK,CAAEI,IAAI,CAACI,KAHhB,CAII,MAAM,CAAEJ,IAAI,CAACO,MAJjB,CAKI,WAAW,CAAEP,IAAI,CAACQ,WALtB,CAMI,QAAQ,CAAEb,gBANd,CAOI,QAAQ,CAAEM,gBAPd,EACSD,IAAI,CAACJ,EADd,CADc,EAAlB,CADJ,cAWQ,oBAAK,mBAAL,EApBhB,GADJ,CAyBH,CArED,CAuEA,cAAef,UAAf"},"metadata":{},"sourceType":"module"}