{"ast":null,"code":"var _jsxFileName = \"/Users/kylatolentino/final-project-1/final-project/client/src/pages/ReadPosts.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Card from '../components/Card';\nimport { supabase } from '../client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ReadPosts = props => {\n  _s();\n\n  const [posts, setPosts] = useState([]);\n  const [searchQuery, setSearchQuery] = useState('');\n  useEffect(() => {\n    const fetchPosts = async () => {\n      const {\n        data\n      } = await supabase.from('Posts').select();\n      setPosts(data);\n    };\n\n    fetchPosts(); // Call fetchPosts when component mounts\n    // Clean-up function\n\n    return () => {// Any clean-up code if needed\n    };\n  }, []);\n\n  const handleSearchChange = event => {\n    setSearchQuery(event.target.value);\n  };\n\n  const handleDeletePost = async id => {\n    await supabase.from('Posts').delete().eq('id', id);\n    setPosts(posts.filter(post => post.id !== id));\n  };\n\n  const handleUpdatePost = async (id, updatedPostData) => {// Implement update functionality here\n  };\n\n  const filteredPosts = posts.filter(post => post.title.toLowerCase().includes(searchQuery.toLowerCase()) || post.author.toLowerCase().includes(searchQuery.toLowerCase()) || post.description.toLowerCase().includes(searchQuery.toLowerCase()));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ReadPosts\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Search posts...\",\n      value: searchQuery,\n      onChange: handleSearchChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), \" \", filteredPosts && filteredPosts.length > 0 ? filteredPosts.map((post, index) => /*#__PURE__*/_jsxDEV(Card, {\n      id: post.id,\n      title: post.title,\n      author: post.author,\n      description: post.description,\n      onDelete: handleDeletePost,\n      onUpdate: handleUpdatePost\n    }, post.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 25\n    }, this)) : /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: 'No Artists Yet :('\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 25\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ReadPosts, \"H8XGT69Pw0IU5QNQMVUhEfLiSIU=\");\n\n_c = ReadPosts;\nexport default ReadPosts;\n\nvar _c;\n\n$RefreshReg$(_c, \"ReadPosts\");","map":{"version":3,"names":["React","useState","useEffect","Card","supabase","ReadPosts","props","posts","setPosts","searchQuery","setSearchQuery","fetchPosts","data","from","select","handleSearchChange","event","target","value","handleDeletePost","id","delete","eq","filter","post","handleUpdatePost","updatedPostData","filteredPosts","title","toLowerCase","includes","author","description","length","map","index"],"sources":["/Users/kylatolentino/final-project-1/final-project/client/src/pages/ReadPosts.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Card from '../components/Card';\nimport { supabase } from '../client';\n\nconst ReadPosts = (props) => {\n    const [posts, setPosts] = useState([]);\n    const [searchQuery, setSearchQuery] = useState('');\n\n    useEffect(() => {\n        const fetchPosts = async () => {\n            const { data } = await supabase\n                .from('Posts')\n                .select();\n\n            setPosts(data);\n        };\n\n        fetchPosts(); // Call fetchPosts when component mounts\n\n        // Clean-up function\n        return () => {\n            // Any clean-up code if needed\n        };\n    }, []);\n\n    const handleSearchChange = (event) => {\n        setSearchQuery(event.target.value);\n    };\n\n    const handleDeletePost = async (id) => {\n        await supabase\n            .from('Posts')\n            .delete()\n            .eq('id', id);\n\n        setPosts(posts.filter(post => post.id !== id));\n    };\n\n    const handleUpdatePost = async (id, updatedPostData) => {\n        // Implement update functionality here\n    };\n\n    const filteredPosts = posts.filter(post =>\n        post.title.toLowerCase().includes(searchQuery.toLowerCase()) ||\n        post.author.toLowerCase().includes(searchQuery.toLowerCase()) ||\n        post.description.toLowerCase().includes(searchQuery.toLowerCase())\n    );\n\n    return (\n        <div className=\"ReadPosts\">\n            <input\n                type=\"text\"\n                placeholder=\"Search posts...\"\n                value={searchQuery}\n                onChange={handleSearchChange}\n            />\n            <br /> {/* New line */}\n            {\n                filteredPosts && filteredPosts.length > 0 ?\n                    filteredPosts.map((post, index) =>\n                        <Card\n                            key={post.id}\n                            id={post.id}\n                            title={post.title}\n                            author={post.author}\n                            description={post.description}\n                            onDelete={handleDeletePost}\n                            onUpdate={handleUpdatePost}\n                        />\n                    ) : <h2>{'No Artists Yet :('}</h2>\n            }\n        </div>\n    )\n}\n\nexport default ReadPosts;"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,SAASC,QAAT,QAAyB,WAAzB;;;AAEA,MAAMC,SAAS,GAAIC,KAAD,IAAW;EAAA;;EACzB,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,EAAD,CAAlC;EACA,MAAM,CAACQ,WAAD,EAAcC,cAAd,IAAgCT,QAAQ,CAAC,EAAD,CAA9C;EAEAC,SAAS,CAAC,MAAM;IACZ,MAAMS,UAAU,GAAG,YAAY;MAC3B,MAAM;QAAEC;MAAF,IAAW,MAAMR,QAAQ,CAC1BS,IADkB,CACb,OADa,EAElBC,MAFkB,EAAvB;MAIAN,QAAQ,CAACI,IAAD,CAAR;IACH,CAND;;IAQAD,UAAU,GATE,CASE;IAEd;;IACA,OAAO,MAAM,CACT;IACH,CAFD;EAGH,CAfQ,EAeN,EAfM,CAAT;;EAiBA,MAAMI,kBAAkB,GAAIC,KAAD,IAAW;IAClCN,cAAc,CAACM,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAd;EACH,CAFD;;EAIA,MAAMC,gBAAgB,GAAG,MAAOC,EAAP,IAAc;IACnC,MAAMhB,QAAQ,CACTS,IADC,CACI,OADJ,EAEDQ,MAFC,GAGDC,EAHC,CAGE,IAHF,EAGQF,EAHR,CAAN;IAKAZ,QAAQ,CAACD,KAAK,CAACgB,MAAN,CAAaC,IAAI,IAAIA,IAAI,CAACJ,EAAL,KAAYA,EAAjC,CAAD,CAAR;EACH,CAPD;;EASA,MAAMK,gBAAgB,GAAG,OAAOL,EAAP,EAAWM,eAAX,KAA+B,CACpD;EACH,CAFD;;EAIA,MAAMC,aAAa,GAAGpB,KAAK,CAACgB,MAAN,CAAaC,IAAI,IACnCA,IAAI,CAACI,KAAL,CAAWC,WAAX,GAAyBC,QAAzB,CAAkCrB,WAAW,CAACoB,WAAZ,EAAlC,KACAL,IAAI,CAACO,MAAL,CAAYF,WAAZ,GAA0BC,QAA1B,CAAmCrB,WAAW,CAACoB,WAAZ,EAAnC,CADA,IAEAL,IAAI,CAACQ,WAAL,CAAiBH,WAAjB,GAA+BC,QAA/B,CAAwCrB,WAAW,CAACoB,WAAZ,EAAxC,CAHkB,CAAtB;EAMA,oBACI;IAAK,SAAS,EAAC,WAAf;IAAA,wBACI;MACI,IAAI,EAAC,MADT;MAEI,WAAW,EAAC,iBAFhB;MAGI,KAAK,EAAEpB,WAHX;MAII,QAAQ,EAAEM;IAJd;MAAA;MAAA;MAAA;IAAA,QADJ,eAOI;MAAA;MAAA;MAAA;IAAA,QAPJ,OASQY,aAAa,IAAIA,aAAa,CAACM,MAAd,GAAuB,CAAxC,GACIN,aAAa,CAACO,GAAd,CAAkB,CAACV,IAAD,EAAOW,KAAP,kBACd,QAAC,IAAD;MAEI,EAAE,EAAEX,IAAI,CAACJ,EAFb;MAGI,KAAK,EAAEI,IAAI,CAACI,KAHhB;MAII,MAAM,EAAEJ,IAAI,CAACO,MAJjB;MAKI,WAAW,EAAEP,IAAI,CAACQ,WALtB;MAMI,QAAQ,EAAEb,gBANd;MAOI,QAAQ,EAAEM;IAPd,GACSD,IAAI,CAACJ,EADd;MAAA;MAAA;MAAA;IAAA,QADJ,CADJ,gBAWQ;MAAA,UAAK;IAAL;MAAA;MAAA;MAAA;IAAA,QApBhB;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAyBH,CArED;;GAAMf,S;;KAAAA,S;AAuEN,eAAeA,SAAf"},"metadata":{},"sourceType":"module"}